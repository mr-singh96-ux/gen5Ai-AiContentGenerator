{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/WeIntern%20Work/AI%20Generator/ai-generator-kbs/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,2WACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":["file://D%3A/WeIntern%20Work/AI%20Generator/ai-generator-kbs/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[60px] w-full rounded-md border border-input bg-transparent px-3 py-2 text-base shadow-sm placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,6QACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AACA,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":["file://D%3A/WeIntern%20Work/AI%20Generator/ai-generator-kbs/app/dashboard/content/_components/FormSection.tsx"],"sourcesContent":["\"use client\";\r\nimport React, { useState } from 'react';\r\nimport { TEMPLATE } from '../../_components/TemplateListSection';\r\nimport Image from 'next/image';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Loader2Icon } from 'lucide-react';\r\n\r\ninterface PROPS {\r\n  selectedTemplate?: TEMPLATE;\r\n  userFormInput: any,\r\n  loading:boolean\r\n}\r\n\r\nfunction FormSection({\r\n  selectedTemplate,\r\n  userFormInput, loading\r\n}: PROPS) {\r\n  const [formData, setFormData] = useState<any>({});\r\n\r\n  const handleInputChange = (event: any) => {\r\n    const { name, value } = event.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const onSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    userFormInput(formData);\r\n  };\r\n\r\n  if (!selectedTemplate) {\r\n    return <div>Loading...</div>; // Display a loading state if selectedTemplate is not available\r\n  }\r\n\r\n  return (\r\n    <div className='p-5 shadow-md border rounded-lg bg-white'>\r\n      {/* Only render the image if the icon exists */}\r\n      {selectedTemplate.icon && (\r\n        <Image\r\n          src={selectedTemplate.icon}\r\n          alt='icon'\r\n          width={70}\r\n          height={70}\r\n        />\r\n      )}\r\n\r\n      <h2 className='font-bold text-2xl mb-2 text-primary'>\r\n        {selectedTemplate?.name}\r\n      </h2>\r\n\r\n      <p className='text-gray-500 text-sm'>\r\n        {selectedTemplate?.desc}\r\n      </p>\r\n\r\n      <form className='mt-6' onSubmit={onSubmit}>\r\n        {selectedTemplate?.form?.map((item, index) => (\r\n          <div className='flex flex-col gap-2 my-2 mb-7' key={index}>\r\n            <label className='font-bold'>{item.label}</label>\r\n            {item.field === 'input' ? (\r\n              <Input\r\n                name={item.name}\r\n                required={item?.required}\r\n                onChange={handleInputChange}\r\n              />\r\n            ) : item.field === 'textarea' ? (\r\n              <Textarea\r\n                name={item.name}\r\n                required={item?.required}\r\n                onChange={handleInputChange}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        ))}\r\n        <Button type=\"submit\" className='w-full py-6' disabled={loading}>\r\n          {loading&&<Loader2Icon className='animate-spin'/>}\r\n          Generate Content\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormSection;\r\n"],"names":[],"mappings":";;;;AACA;AAEA;AACA;AACA;AACA;AACA;AAPA;;;;;;;;AAeA,SAAS,YAAY,EACnB,gBAAgB,EAChB,aAAa,EAAE,OAAO,EAChB;IACN,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAO,CAAC;IAE/C,MAAM,oBAAoB,CAAC;QACzB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,MAAM;QACpC,YAAY;YAAE,GAAG,QAAQ;YAAE,CAAC,KAAK,EAAE;QAAM;IAC3C;IAEA,MAAM,WAAW,CAAC;QAChB,EAAE,cAAc;QAChB,cAAc;IAChB;IAEA,IAAI,CAAC,kBAAkB;QACrB,qBAAO,8OAAC;sBAAI;;;;;kBAAkB,+DAA+D;IAC/F;IAEA,qBACE,8OAAC;QAAI,WAAU;;YAEZ,iBAAiB,IAAI,kBACpB,8OAAC,6HAAA,CAAA,UAAK;gBACJ,KAAK,iBAAiB,IAAI;gBAC1B,KAAI;gBACJ,OAAO;gBACP,QAAQ;;;;;;0BAIZ,8OAAC;gBAAG,WAAU;0BACX,kBAAkB;;;;;;0BAGrB,8OAAC;gBAAE,WAAU;0BACV,kBAAkB;;;;;;0BAGrB,8OAAC;gBAAK,WAAU;gBAAO,UAAU;;oBAC9B,kBAAkB,MAAM,IAAI,CAAC,MAAM,sBAClC,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAM,WAAU;8CAAa,KAAK,KAAK;;;;;;gCACvC,KAAK,KAAK,KAAK,wBACd,8OAAC,0HAAA,CAAA,QAAK;oCACJ,MAAM,KAAK,IAAI;oCACf,UAAU,MAAM;oCAChB,UAAU;;;;;2CAEV,KAAK,KAAK,KAAK,2BACjB,8OAAC,6HAAA,CAAA,WAAQ;oCACP,MAAM,KAAK,IAAI;oCACf,UAAU,MAAM;oCAChB,UAAU;;;;;2CAEV;;2BAd8C;;;;;kCAiBtD,8OAAC,2HAAA,CAAA,SAAM;wBAAC,MAAK;wBAAS,WAAU;wBAAc,UAAU;;4BACrD,yBAAS,8OAAC,qNAAA,CAAA,cAAW;gCAAC,WAAU;;;;;;4BAAiB;;;;;;;;;;;;;;;;;;;AAM5D;uCAEe","debugId":null}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 210, "column": 0}, "map": {"version":3,"sources":["file://D%3A/WeIntern%20Work/AI%20Generator/ai-generator-kbs/app/dashboard/content/_components/OutputSection.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport '@toast-ui/editor/dist/toastui-editor.css';\r\nimport dynamic from 'next/dynamic';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Copy } from 'lucide-react';\r\n\r\nconst Editor = dynamic(() => import('@toast-ui/react-editor').then(mod => mod.Editor), {\r\n  ssr: false, // Disable SSR for the Editor\r\n});\r\n\r\ninterface Props {\r\n  aiOutput: string;\r\n}\r\n\r\nfunction OutputSection({ aiOutput }: Props) {\r\n  const editorRef = useRef<any>(null);\r\n\r\n  useEffect(() => {\r\n    // Correct the typo: 'cuurent' -> 'current'\r\n    if (editorRef.current) {\r\n      const editorInstance = editorRef.current.getInstance();\r\n      editorInstance.setMarkdown(aiOutput);\r\n    }\r\n  }, [aiOutput]);\r\n\r\n  return (\r\n    <div className=\"bg-white shadow-lg border rounded-lg\">\r\n      <div className=\"flex justify-between items-center p-5\">\r\n        <h2 className=\"font-medium text-lg\">Your Result</h2>\r\n        <Button className=\"flex gap-2\" onClick={() => {\r\n          navigator.clipboard.writeText(aiOutput);\r\n          alert(\"Message Copied\");\r\n        }}>\r\n          <Copy className=\"w-4 h-4\" /> Copy\r\n        </Button>\r\n      </div>\r\n      <Editor\r\n        ref={editorRef}\r\n        initialValue=\"Your result will appear here!\"\r\n        initialEditType=\"wysiwyg\"\r\n        height=\"600px\"\r\n        useCommandShortcut={true}\r\n        onChange={() => console.log(editorRef.current.getInstance().getMarkdown())}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OutputSection;"],"names":[],"mappings":";;;;AAAA;AAEA;AACA;AACA;;;;;;;;AAEA,MAAM,SAAS,CAAA,GAAA,+JAAA,CAAA,UAAO,AAAD,EAAE,IAAM,6KAAiC,IAAI,CAAC,CAAA,MAAO,IAAI,MAAM;;;;;;IAClF,KAAK;;AAOP,SAAS,cAAc,EAAE,QAAQ,EAAS;IACxC,MAAM,YAAY,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAO;IAE9B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,2CAA2C;QAC3C,IAAI,UAAU,OAAO,EAAE;YACrB,MAAM,iBAAiB,UAAU,OAAO,CAAC,WAAW;YACpD,eAAe,WAAW,CAAC;QAC7B;IACF,GAAG;QAAC;KAAS;IAEb,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAsB;;;;;;kCACpC,8OAAC,2HAAA,CAAA,SAAM;wBAAC,WAAU;wBAAa,SAAS;4BACtC,UAAU,SAAS,CAAC,SAAS,CAAC;4BAC9B,MAAM;wBACR;;0CACE,8OAAC,kMAAA,CAAA,OAAI;gCAAC,WAAU;;;;;;4BAAY;;;;;;;;;;;;;0BAGhC,8OAAC;gBACC,KAAK;gBACL,cAAa;gBACb,iBAAgB;gBAChB,QAAO;gBACP,oBAAoB;gBACpB,UAAU,IAAM,QAAQ,GAAG,CAAC,UAAU,OAAO,CAAC,WAAW,GAAG,WAAW;;;;;;;;;;;;AAI/E;uCAEe","debugId":null}},
    {"offset": {"line": 305, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 311, "column": 0}, "map": {"version":3,"sources":["file://D%3A/WeIntern%20Work/AI%20Generator/ai-generator-kbs/app/%28data%29/templates.tsx"],"sourcesContent":["export default[\r\n    {\r\n        name:'Blog Title',\r\n        desc:'An AI tool taht generate blog title depends upon your blopg information',\r\n        category:'blog',\r\n        icon:'https://cdn-icons-png.flaticon.com/128/4186/4186534.png',\r\n        aiprompt:'Give me 5 blog topic idea in bullet wise only based on give title & outline and give me result in Rich text editor format.',\r\n        slug:'generate-blog-title',\r\n        form:[\r\n            {\r\n                label:'Enter your blog title',\r\n                field:'input',\r\n                name:'title',\r\n                required:true\r\n            },\r\n            {\r\n                label:'Enter blog outline',\r\n                field:'textarea',\r\n                name:'outline',\r\n\r\n            }\r\n        ]\r\n    },\r\n    {\r\n    name: 'Blog Content',\r\n    desc: 'An AI tool that generates full blog content based on your blog title, title, and outline.',\r\n    category:'blog',\r\n    icon: 'https://cdn-icons-png.flaticon.com/128/4905/4905454.png',\r\n    aiprompt: 'Generate a detailed blog post based on the title, title, and outline provided.',\r\n    slug: 'generate-blog-content',\r\n    form: [\r\n      {\r\n        label: 'Enter your blog title',\r\n        field: 'input',\r\n        name: 'title',\r\n        required: true\r\n      },\r\n      {\r\n        label: 'Enter blog outline',\r\n        field: 'textarea',\r\n        name: 'outline',\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    name: 'Blog Topic Ideas',\r\n    desc: 'An AI tool that generates multiple blog topic ideas based on the given title and outline.',\r\n    category:'blog',\r\n    icon: 'https://cdn-icons-png.flaticon.com/128/11497/11497847.png',\r\n    aiprompt: 'Give me 5 blog topic ideas in bullet points based on the given title and outline.',\r\n    slug: 'generate-blog-topic-ideas',\r\n    form: [\r\n      {\r\n        label: 'Enter your blog title',\r\n        field: 'input',\r\n        name: 'title',\r\n        required: true\r\n      },\r\n      {\r\n        label: 'Enter blog outline',\r\n        field: 'textarea',\r\n        name: 'outline',\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    name: 'YouTube SEO Title',\r\n    desc: 'An AI tool that generates SEO-friendly titles for YouTube videos based on the given description and topic.',\r\n    category:'Youtube Tools',\r\n    icon: 'https://cdn-icons-png.flaticon.com/128/402/402075.png',\r\n    aiprompt: 'Generate an SEO-optimized YouTube title based on the given description and topic.',\r\n    slug: 'generate-youtube-seo-title',\r\n    form: [\r\n      {\r\n        label: 'Enter your YouTube video topic',\r\n        field: 'input',\r\n        name: 'topic',\r\n        required: true\r\n      },\r\n      {\r\n        label: 'Enter your YouTube video description',\r\n        field: 'textarea',\r\n        name: 'description',\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    name: 'YouTube Description',\r\n    desc: 'An AI tool that generates YouTube video descriptions based on the given topic and keywords.',\r\n    category:'Youtube Tool',\r\n    icon: 'https://cdn-icons-png.flaticon.com/128/174/174883.png',\r\n    aiprompt: 'Generate a detailed YouTube video description based on the given topic and keywords.',\r\n    slug: 'generate-youtube-description',\r\n    form: [\r\n      {\r\n        label: 'Enter your YouTube video topic',\r\n        field: 'input',\r\n        name: 'topic',\r\n        required: true\r\n      },\r\n      {\r\n        label: 'Enter your video keywords',\r\n        field: 'textarea',\r\n        name: 'keywords',\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    name: 'YouTube Tags',\r\n    desc: 'An AI tool that generates relevant YouTube video tags based on the given video topic and keywords.',\r\n    category:'Youtube Tool',\r\n    icon: 'https://cdn-icons-png.flaticon.com/128/4674/4674918.png',\r\n    aiprompt: 'Generate YouTube tags based on the given video topic and keywords.',\r\n    slug: 'generate-youtube-tags',\r\n    form: [\r\n      {\r\n        label: 'Enter your YouTube video topic',\r\n        field: 'input',\r\n        name: 'topic',\r\n        required: true\r\n      },\r\n      {\r\n        label: 'Enter your video keywords',\r\n        field: 'textarea',\r\n        name: 'keywords',\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    name: 'Article Rewriter',\r\n    desc: 'An AI tool that rewrites articles to make them more unique and engaging.',\r\n    category:'blog',\r\n    icon: 'https://cdn-icons-png.flaticon.com/128/4228/4228952.png',\r\n    aiprompt: 'Rewrite the given article to make it more unique, engaging, and original.',\r\n    slug: 'rewrite-article',\r\n    form: [\r\n      {\r\n        label: 'Enter the article text',\r\n        field: 'textarea',\r\n        name: 'articleText',\r\n        required: true\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    name: 'Text Improver',\r\n    desc: 'An AI tool that improves the quality of your text by enhancing its readability, tone, and style.',\r\n    category:'blog',\r\n    icon: 'https://cdn-icons-png.flaticon.com/128/4021/4021693.png',\r\n    aiprompt: 'Improve the given text by enhancing readability, tone, and style.',\r\n    slug: 'improve-text',\r\n    form: [\r\n      {\r\n        label: 'Enter your text to improve',\r\n        field: 'textarea',\r\n        name: 'text',\r\n        required: true\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    name: 'Add Emojis to Text',\r\n    desc: 'An AI tool that adds relevant emojis to your text to make it more engaging.',\r\n    category:'blog tool',\r\n    icon: 'https://cdn-icons-png.flaticon.com/128/2584/2584606.png',\r\n    aiprompt: 'Add emojis to the given text based on its content and context.',\r\n    slug: 'add-emojis-to-text',\r\n    form: [\r\n      {\r\n        label: 'Enter your text',\r\n        field: 'textarea',\r\n        name: 'text',\r\n        required: true\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    name: 'Instagram Post Generator',\r\n    desc: 'An AI tool that generates creative Instagram post captions based on the given topic.',\r\n    category:'Instagram Tool',\r\n    icon: 'https://cdn-icons-png.flaticon.com/128/2111/2111463.png',\r\n    aiprompt: 'Generate a creative Instagram post caption based on the given topic.',\r\n    slug: 'generate-instagram-post',\r\n    form: [\r\n      {\r\n        label: 'Enter your Instagram post topic',\r\n        field: 'input',\r\n        name: 'topic',\r\n        required: true\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    name: 'Instagram Hashtag Generator',\r\n    desc: 'An AI tool that generates relevant hashtags for your Instagram post.',\r\n    category:'Instagram Tool',\r\n    icon: 'https://cdn-icons-png.flaticon.com/128/7045/7045432.png',\r\n    aiprompt: 'Generate relevant hashtags for Instagram based on the given topic.',\r\n    slug: 'generate-instagram-hashtags',\r\n    form: [\r\n      {\r\n        label: 'Enter your Instagram post topic',\r\n        field: 'input',\r\n        name: 'topic',\r\n        required: true\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    name: 'English Grammar Checker',\r\n    desc: 'An AI tool that checks your English text for grammatical errors and suggests corrections.',\r\n    category:'Blog Tool',\r\n    icon: 'https://cdn-icons-png.flaticon.com/128/18475/18475391.png',\r\n    aiprompt: 'Check the grammar of the given text and suggest corrections.',\r\n    slug: 'check-english-grammar',\r\n    form: [\r\n      {\r\n        label: 'Enter the text to check grammar',\r\n        field: 'textarea',\r\n        name: 'text',\r\n        required: true\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    name: 'Code Generator & Explanation',\r\n    desc: 'An AI tool that writes code based on your problem statement and explains how it works.',\r\n    category:'Blog Tool',\r\n    icon: 'https://cdn-icons-png.flaticon.com/128/6062/6062646.png',\r\n    aiprompt: 'Write code to solve the given problem and explain each part of the code.',\r\n    slug: 'generate-and-explain-code',\r\n    form: [\r\n      {\r\n        label: 'Enter your coding problem or requirement',\r\n        field: 'textarea',\r\n        name: 'problem',\r\n        required: true\r\n      }\r\n    ]\r\n  }\r\n]"],"names":[],"mappings":";;;uCAAc;IACV;QACI,MAAK;QACL,MAAK;QACL,UAAS;QACT,MAAK;QACL,UAAS;QACT,MAAK;QACL,MAAK;YACD;gBACI,OAAM;gBACN,OAAM;gBACN,MAAK;gBACL,UAAS;YACb;YACA;gBACI,OAAM;gBACN,OAAM;gBACN,MAAK;YAET;SACH;IACL;IACA;QACA,MAAM;QACN,MAAM;QACN,UAAS;QACT,MAAM;QACN,UAAU;QACV,MAAM;QACN,MAAM;YACJ;gBACE,OAAO;gBACP,OAAO;gBACP,MAAM;gBACN,UAAU;YACZ;YACA;gBACE,OAAO;gBACP,OAAO;gBACP,MAAM;YACR;SACD;IACH;IACA;QACE,MAAM;QACN,MAAM;QACN,UAAS;QACT,MAAM;QACN,UAAU;QACV,MAAM;QACN,MAAM;YACJ;gBACE,OAAO;gBACP,OAAO;gBACP,MAAM;gBACN,UAAU;YACZ;YACA;gBACE,OAAO;gBACP,OAAO;gBACP,MAAM;YACR;SACD;IACH;IACA;QACE,MAAM;QACN,MAAM;QACN,UAAS;QACT,MAAM;QACN,UAAU;QACV,MAAM;QACN,MAAM;YACJ;gBACE,OAAO;gBACP,OAAO;gBACP,MAAM;gBACN,UAAU;YACZ;YACA;gBACE,OAAO;gBACP,OAAO;gBACP,MAAM;YACR;SACD;IACH;IACA;QACE,MAAM;QACN,MAAM;QACN,UAAS;QACT,MAAM;QACN,UAAU;QACV,MAAM;QACN,MAAM;YACJ;gBACE,OAAO;gBACP,OAAO;gBACP,MAAM;gBACN,UAAU;YACZ;YACA;gBACE,OAAO;gBACP,OAAO;gBACP,MAAM;YACR;SACD;IACH;IACA;QACE,MAAM;QACN,MAAM;QACN,UAAS;QACT,MAAM;QACN,UAAU;QACV,MAAM;QACN,MAAM;YACJ;gBACE,OAAO;gBACP,OAAO;gBACP,MAAM;gBACN,UAAU;YACZ;YACA;gBACE,OAAO;gBACP,OAAO;gBACP,MAAM;YACR;SACD;IACH;IACA;QACE,MAAM;QACN,MAAM;QACN,UAAS;QACT,MAAM;QACN,UAAU;QACV,MAAM;QACN,MAAM;YACJ;gBACE,OAAO;gBACP,OAAO;gBACP,MAAM;gBACN,UAAU;YACZ;SACD;IACH;IACA;QACE,MAAM;QACN,MAAM;QACN,UAAS;QACT,MAAM;QACN,UAAU;QACV,MAAM;QACN,MAAM;YACJ;gBACE,OAAO;gBACP,OAAO;gBACP,MAAM;gBACN,UAAU;YACZ;SACD;IACH;IACA;QACE,MAAM;QACN,MAAM;QACN,UAAS;QACT,MAAM;QACN,UAAU;QACV,MAAM;QACN,MAAM;YACJ;gBACE,OAAO;gBACP,OAAO;gBACP,MAAM;gBACN,UAAU;YACZ;SACD;IACH;IACA;QACE,MAAM;QACN,MAAM;QACN,UAAS;QACT,MAAM;QACN,UAAU;QACV,MAAM;QACN,MAAM;YACJ;gBACE,OAAO;gBACP,OAAO;gBACP,MAAM;gBACN,UAAU;YACZ;SACD;IACH;IACA;QACE,MAAM;QACN,MAAM;QACN,UAAS;QACT,MAAM;QACN,UAAU;QACV,MAAM;QACN,MAAM;YACJ;gBACE,OAAO;gBACP,OAAO;gBACP,MAAM;gBACN,UAAU;YACZ;SACD;IACH;IACA;QACE,MAAM;QACN,MAAM;QACN,UAAS;QACT,MAAM;QACN,UAAU;QACV,MAAM;QACN,MAAM;YACJ;gBACE,OAAO;gBACP,OAAO;gBACP,MAAM;gBACN,UAAU;YACZ;SACD;IACH;IACA;QACE,MAAM;QACN,MAAM;QACN,UAAS;QACT,MAAM;QACN,UAAU;QACV,MAAM;QACN,MAAM;YACJ;gBACE,OAAO;gBACP,OAAO;gBACP,MAAM;gBACN,UAAU;YACZ;SACD;IACH;CACD","debugId":null}},
    {"offset": {"line": 554, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 560, "column": 0}, "map": {"version":3,"sources":["file://D%3A/WeIntern%20Work/AI%20Generator/ai-generator-kbs/utils/AiModal.tsx"],"sourcesContent":["const {\r\n    GoogleGenerativeAI,\r\n    HarmCategory,\r\n    HarmBlockThreshold,\r\n  } = require(\"@google/generative-ai\");\r\n  \r\n  const apiKey = process.env.NEXT_PUBLIC_GOOGLE_GEMINI_API_KEY;\r\n  const genAI = new GoogleGenerativeAI(apiKey);\r\n  \r\n  const model = genAI.getGenerativeModel({\r\n    model: \"gemini-2.0-flash\",\r\n  });\r\n  \r\n  const generationConfig = {\r\n    temperature: 1,\r\n    topP: 0.95,\r\n    topK: 40,\r\n    maxOutputTokens: 8192,\r\n    responseMimeType: \"text/plain\",\r\n  };\r\n  \r\n\r\nexport const chatSession = model.startChat({\r\n      generationConfig,\r\n      history: [\r\n      ],\r\n    });\r\n  \r\n"],"names":[],"mappings":";;;AAAA,MAAM,EACF,kBAAkB,EAClB,YAAY,EACZ,kBAAkB,EACnB;AAED,MAAM;AACN,MAAM,QAAQ,IAAI,mBAAmB;AAErC,MAAM,QAAQ,MAAM,kBAAkB,CAAC;IACrC,OAAO;AACT;AAEA,MAAM,mBAAmB;IACvB,aAAa;IACb,MAAM;IACN,MAAM;IACN,iBAAiB;IACjB,kBAAkB;AACpB;AAGK,MAAM,cAAc,MAAM,SAAS,CAAC;IACrC;IACA,SAAS,EACR;AACH","debugId":null}},
    {"offset": {"line": 580, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 586, "column": 0}, "map": {"version":3,"sources":["file://D%3A/WeIntern%20Work/AI%20Generator/ai-generator-kbs/app/dashboard/content/%5Btemplate-slug%5D/page.tsx"],"sourcesContent":["\"use client\"\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport FormSection from '../_components/FormSection';\r\nimport OutputSection from '../_components/OutputSection';\r\nimport Templates from '@/app/(data)/templates';\r\nimport { TEMPLATE } from '../../_components/TemplateListSection';\r\nimport { Button } from '@/components/ui/button';\r\nimport { ArrowLeft } from 'lucide-react';\r\nimport Link from 'next/link';\r\nimport { chatSession } from '@/utils/AiModal';\r\nimport { db } from '@/utils/db';\r\nimport { AIOutput } from '@/utils/schema';\r\nimport { useUser } from '@clerk/nextjs';\r\nimport moment from 'moment';\r\nimport { TotalUsageContext } from '@/app/(context)/TotalUsageContext';\r\nimport { useRouter } from 'next/navigation';\r\n\r\ninterface PROPS {\r\n  params: Promise<{ 'template-slug': string }>; // Make sure 'params' is a Promise\r\n}\r\n\r\nfunction CreateNewContent(props: PROPS) {\r\n  const [selectedTemplate, setSelectedTemplate] = useState<TEMPLATE | undefined>(undefined);\r\n  const [templateSlug, setTemplateSlug] = useState<string | undefined>(undefined);\r\n  const [loading, setLoading] = useState(false);\r\n  const [aiOutput, setAiOutput] = useState<string>('');\r\n  const router = useRouter();\r\n  const { user } = useUser();\r\n\r\n  const {totalUsage,setTotalUsage}=useContext(TotalUsageContext);\r\n\r\n  useEffect(() => {\r\n    props.params.then((unwrappedParams) => {\r\n      const slug = unwrappedParams['template-slug'];\r\n      setTemplateSlug(slug);\r\n      const template = Templates?.find((item) => item.slug === slug);\r\n      setSelectedTemplate(template);\r\n    });\r\n  }, [props.params]);\r\n\r\n  const GenerateAIContent = async (formData: any) => {\r\n\r\n    if (totalUsage >= 100000) {\r\n      alert(\"You have reached your usage limit. Please upgrade your plan to continue.\");\r\n      router.push('/dashboard/billing/')\r\n      return;\r\n    }\r\n    \r\n\r\n    setLoading(true);\r\n    const SelectedPrompt = selectedTemplate?.aiprompt;\r\n\r\n    const FinalAIPrompt = JSON.stringify(formData) + \", \" + SelectedPrompt;\r\n\r\n    try {\r\n      const result = await chatSession.sendMessage(FinalAIPrompt);\r\n\r\n      // Check if result is valid and has a response\r\n      if (result && result.response) {\r\n        const responseText = await result.response.text(); // Ensure response text is awaited properly\r\n        setAiOutput(responseText); // Set AI output correctly\r\n        await SaveInDb(formData, selectedTemplate?.slug, responseText);\r\n      } else {\r\n        console.error('Error: No response found in the result.');\r\n        setAiOutput('Error: No response found.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during chat session:', error);\r\n      setAiOutput('Error during chat session.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Save AI output and form data to the database\r\n  const SaveInDb = async (formData: any, slug: string | undefined, aiResp: string) => {\r\n    if (!user?.primaryEmailAddress?.emailAddress) {\r\n      console.error('User email is not available.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const result = await db.insert(AIOutput).values({\r\n        formData: JSON.stringify(formData), // Convert formData to string\r\n        aiResponse: aiResp,\r\n        templateSlug: slug || '',\r\n        createdBy: user.primaryEmailAddress.emailAddress,\r\n        createdAt: moment().format('DD/MM/YYYY'), // Ensure the format is a string\r\n      });\r\n\r\n      console.log('Data saved successfully:', result);\r\n    } catch (error) {\r\n      console.error('Error saving to database:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-10\">\r\n      <Link href=\"/dashboard\">\r\n        <Button>\r\n          <ArrowLeft /> Back\r\n        </Button>\r\n      </Link>\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-5 py-5\">\r\n        {/* FormSection */}\r\n        <FormSection selectedTemplate={selectedTemplate} userFormInput={GenerateAIContent} loading={loading} />\r\n        <div className=\"col-span-2\">\r\n          <OutputSection aiOutput={aiOutput} />\r\n        </div>\r\n        {/* OutputSection */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateNewContent;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 748, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}