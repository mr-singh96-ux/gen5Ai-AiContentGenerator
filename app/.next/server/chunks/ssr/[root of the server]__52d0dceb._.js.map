{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/roboto_d549e3e.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"roboto_d549e3e-module__cPpiHq__className\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 9, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/roboto_d549e3e.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Roboto%22,%22arguments%22:[{%22subsets%22:[%22latin%22]}],%22variableName%22:%22roboto%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Roboto', 'Roboto Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,qJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,qJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,qJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":["file://D%3A/WeIntern%20Work/AI%20Generator/ai-generator-kbs/app/layout.tsx"],"sourcesContent":["import type { Metadata } from \"next\";\nimport { Roboto } from \"next/font/google\";\nimport \"./globals.css\";\nimport { ClerkProvider } from \"@clerk/nextjs\";\n\nconst roboto = Roboto({ subsets: [\"latin\"] });\n\nexport const metadata: Metadata = {\n  title: \"KiratGPT AI\",\n  description: \"Generate high-quality content effortlessly with AI\",\n  openGraph: {\n    title: \"AI Content Generator\",\n    description: \"Generate high-quality content effortlessly with AI\",\n    url: \"https://yourwebsite.com\",\n  },\n  twitter: {\n    card: \"summary_large_image\",\n    title: \"AI Content Generator\",\n    description: \"Generate high-quality content effortlessly with AI\",\n  },\n};\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <ClerkProvider>\n      <html lang=\"en\">\n        <head>\n          {/* Ensure that metadata.title is always a string */}\n          <title>{\"KiratGPT AI\"}</title>\n        </head>\n        <body className={roboto.className}>{children}</body>\n      </html>\n    </ClerkProvider>\n  );\n}\n"],"names":[],"mappings":";;;;;;AAGA;;;;;AAIO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;IACb,WAAW;QACT,OAAO;QACP,aAAa;QACb,KAAK;IACP;IACA,SAAS;QACP,MAAM;QACN,OAAO;QACP,aAAa;IACf;AACF;AAEe,SAAS,WAAW,EACjC,QAAQ,EAGR;IACA,qBACE,8OAAC,yKAAA,CAAA,gBAAa;kBACZ,cAAA,8OAAC;YAAK,MAAK;;8BACT,8OAAC;8BAEC,cAAA,8OAAC;kCAAO;;;;;;;;;;;8BAEV,8OAAC;oBAAK,WAAW,yIAAA,CAAA,UAAM,CAAC,SAAS;8BAAG;;;;;;;;;;;;;;;;;AAI5C","debugId":null}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}