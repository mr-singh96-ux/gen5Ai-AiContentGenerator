name: Next.js CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch: # Allow manual trigger

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x] # Compatible with Next.js

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v3

      - name: 🔧 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: 📦 Install Dependencies
        run: npm install -f

      # Install ESLint as a devDependency
      - name: Install ESLint
        run: npm install --save-dev eslint --legacy-peer-deps

      # Downgrade React to version 17.x
      - name: Downgrade React
        run: |
          npm install react@17.0.2 react-dom@17.0.2 --save

      # Create the ESLint config file .eslintrc.js
      - name: 🧹 Create ESLint Configuration File
        run: |
          echo "module.exports = {" > .eslintrc.js
          echo "  extends: [" >> .eslintrc.js
          echo "    'next/core-web-vitals'," >> .eslintrc.js
          echo "    'eslint:recommended'," >> .eslintrc.js
          echo "    'plugin:react/recommended'," >> .eslintrc.js
          echo "    'plugin:@typescript-eslint/recommended'," >> .eslintrc.js
          echo "  ]," >> .eslintrc.js
          echo "  plugins: ['react', '@typescript-eslint'], " >> .eslintrc.js
          echo "  parser: '@typescript-eslint/parser'," >> .eslintrc.js
          echo "  parserOptions: {" >> .eslintrc.js
          echo "    ecmaVersion: 2020," >> .eslintrc.js
          echo "    sourceType: 'module'," >> .eslintrc.js
          echo "    ecmaFeatures: {" >> .eslintrc.js
          echo "      jsx: true," >> .eslintrc.js
          echo "    }" >> .eslintrc.js
          echo "  }," >> .eslintrc.js
          echo "  rules: {" >> .eslintrc.js
          echo "    '@typescript-eslint/no-unused-vars': ['warn']," >> .eslintrc.js
          echo "    'react/react-in-jsx-scope': 'off'," >> .eslintrc.js
          echo "  }" >> .eslintrc.js
          echo "};" >> .eslintrc.js

      - name: 🧹 Run Linter
        run: npm run lint

      - name: 🛠️ Build Project
        run: npm run build

      - name: ✅ Run Tests (Optional)
        run: echo "No tests configured" # Replace with: npm test if you have tests
